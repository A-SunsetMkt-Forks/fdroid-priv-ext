name: Build

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create
        id: create
        run: |
          ./create_mod.sh || exit 1
          VERSION=$(sed -n 's/^versionCode=//p' module.prop)
          echo "VERSION=$VERSION" >>"$GITHUB_OUTPUT"
          CHANGELOG=$(
            FLAG=false
            while IFS= read -r line; do
              [ "$FLAG" = true ] && echo "$line" | grep -qs "^###" && break
              echo "$line"
              echo "$line" | grep -qs "^###" && FLAG=true
            done <CHANGELOG.md
          )
          echo "CHANGELOG=$CHANGELOG" >>"$GITHUB_OUTPUT"

      - name: Update the module
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update to ${{ steps.create.outputs.VERSION }}

      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create.outputs.VERSION }}
          body: ${{ steps.create.outputs.CHANGELOG }}
          files: build/*

      - name: Update update.json
        run: |
          jq '.version = "${{ steps.create.outputs.VERSION }}" | .versionCode = ${{ steps.create.outputs.VERSION }} | .zipUrl = "${{ fromJSON(steps.release.outputs.assets)[0].browser_download_url }}"' update.json >update.json.tmp
          mv update.json.tmp update.json

      - name: Commit update.json
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update update.json to ${{ steps.create.outputs.VERSION }}
